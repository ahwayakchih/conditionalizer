
Field: Filter
------------------------------------

Version: 1.0
Author: Marcin Konicki (http://ahwayakchih.neoni.net)
Build Date: 12 March 2009
Requirements: Symphony version 2.0.2 or later.

[SYNOPSIS]

Field: Filter allows to use expressions to conditionally filter 
datasource by params.
Symphony allows to filter with params, but without a way to set filter 
conditionally, e.g., depending on param values.

After adding this field to section, you will be able to filter datasource 
like this:

	(if value of ({$param}) is (show_section_X_entries))

to make datasource load entries only if $param value 
is "show_section_X_entries".

Or this:

	(if any of ({$ds-list}) is in (one,two,three,{$param}))

to load entries only if any of the values found in $ds-list param is 
equal to "one", "two", "three" or value of $param.

Of course most of that is also possible with built-in filtering, so 
Filter field is useful mostly when filtering by datasource generated 
parameters or with really complicated stuff (which probably could be 
simplified by changing site structure :).

In some cases it can be useful to minimize number of SQL queries, because 
when expression evaluates to false, database is not queried at all 
and datasource outputs empty set.


[INSTALLATION]

1. Upload the 'filterfield' folder in this archive to your Symphony 
   'extensions' folder.

2. Enable it on System > Extensions page: select the "Field: Filter",
   choose Enable from the "With selected..." menu, then click 
   "Apply" button.


[USAGE]

1. Add Filter field to section which you want to filter conditionally.

2. Filter datasource of that section by Filter field.


[SYNTAX]

	(if SELECTOR (VALUES) OPERAND (VALUES)) 

Expression has to start and end with parenthesis.
There has to be "if" at the start of expression (just in case there 
will be other function added in future).

SELECTOR can be "value of", "any of" or "all of".

VALUES is comma separated list of values. Each of them can be either 
   literal value, {$param} or sub expression. Every VALUES has to be 
   inside parenthesis. It can be empty, but parenthesis is required.

OPERAND: "is", "is not", "is in" or "is not in"


[EXAMPLES]

If value of datasource generated ds-type param is "mytype", or value of 
datasource generated ds-true-or-false param is "yes":

	(if any of ((if value of ({$ds-type}) is (mytype)), {$ds-true-or-false}) is (yes))

If any value of datasource generated param can be found in value of 
another datasource generated param:

	(if any of ({$ds-list}) is in ({$ds-different-list}))

If value of author param (passed through URL param) can be found in value 
of param generated by datasource:

	(if value of ({$author}) is in ({$ds-list-of-authors-with-additional-info}))

If value of param passed thorugh URL path is "symphony":

	(if value of ({$name}) is (symphony))

If any of values found in datasource generated param is empty/null:

    (if any of ({$ds-names}) is ())

